@{
    ViewData["Title"] = "Test Authentication";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <h2>Authentication Test Page</h2>
            <p>This page demonstrates role-based access control.</p>
            
            <div class="row mt-4">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5>Test Product API</h5>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-primary" onclick="testGetProducts()">Get Products (Public)</button>
                            <div id="getProductsResult" class="mt-2"></div>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5>Create Product (Admin/Manager Only)</h5>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-warning" onclick="testCreateProduct()">Create Product</button>
                            <div id="createProductResult" class="mt-2"></div>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5>Current User Info</h5>
                        </div>
                        <div class="card-body">
                            <div id="userInfo"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Display current user info
function displayUserInfo() {
    const token = localStorage.getItem('jwtToken');
    const roles = JSON.parse(localStorage.getItem('userRoles') || '[]');
    const userInfoDiv = document.getElementById('userInfo');
    
    if (token) {
        userInfoDiv.innerHTML = `
            <div class="alert alert-info">
                <p><strong>Status:</strong> Logged In</p>
                <p><strong>Roles:</strong> ${roles.join(', ')}</p>
                <p><strong>Token:</strong> ${token.substring(0, 30)}...</p>
            </div>
        `;
    } else {
        userInfoDiv.innerHTML = `
            <div class="alert alert-warning">
                <p><strong>Status:</strong> Not Logged In</p>
                <p>Please login first to test protected endpoints.</p>
            </div>
        `;
    }
}

// Test getting products (public endpoint)
async function testGetProducts() {
    const resultDiv = document.getElementById('getProductsResult');
    
    try {
        const response = await fetch('/api/product/GetProduct');
        const data = await response.json();
        
        if (response.ok) {
            resultDiv.innerHTML = `
                <div class="alert alert-success">
                    <strong>Success!</strong> Retrieved ${data.length} products.
                </div>
            `;
        } else {
            resultDiv.innerHTML = `
                <div class="alert alert-danger">
                    <strong>Error:</strong> ${data.message || 'Failed to get products'}
                </div>
            `;
        }
    } catch (error) {
        resultDiv.innerHTML = `
            <div class="alert alert-danger">
                <strong>Error:</strong> ${error.message}
            </div>
        `;
    }
}

// Test creating a product (requires Admin or Manager role)
async function testCreateProduct() {
    const token = localStorage.getItem('jwtToken');
    const resultDiv = document.getElementById('createProductResult');
    
    if (!token) {
        resultDiv.innerHTML = `
            <div class="alert alert-warning">
                <strong>Warning:</strong> You need to login first!
            </div>
        `;
        return;
    }
    
    const testProduct = {
        name: "Test Product " + new Date().getTime(),
        price: 99.99,
        description: "This is a test product"
    };
    
    try {
        const response = await fetch('/api/product/CreateProduct', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(testProduct)
        });
        
        const data = await response.json();
        
        if (response.ok) {
            resultDiv.innerHTML = `
                <div class="alert alert-success">
                    <strong>Success!</strong> Product created successfully.
                </div>
            `;
        } else {
            resultDiv.innerHTML = `
                <div class="alert alert-danger">
                    <strong>Error:</strong> ${data.message || 'Failed to create product'}
                </div>
            `;
        }
    } catch (error) {
        resultDiv.innerHTML = `
            <div class="alert alert-danger">
                <strong>Error:</strong> ${error.message}
            </div>
        `;
    }
}

// Initialize page
document.addEventListener('DOMContentLoaded', function() {
    displayUserInfo();
});
</script> 